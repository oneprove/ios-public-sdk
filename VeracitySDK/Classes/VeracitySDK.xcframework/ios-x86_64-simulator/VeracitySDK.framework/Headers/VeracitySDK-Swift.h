// Generated by Apple Swift version 5.4 (swiftlang-1205.0.26.9 clang-1205.0.19.55)
#ifndef VERACITYSDK_SWIFT_H
#define VERACITYSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import Realm;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="VeracitySDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSURLSession;
@class NSURLSessionTask;
@class NSNumber;

SWIFT_CLASS("_TtC11VeracitySDK10APIRequest")
@interface APIRequest : NSObject <NSURLSessionTaskDelegate>
/// Update the upload state for the request
/// \param session The session
///
/// \param task The task
///
/// \param bytesSent The bytes sent
///
/// \param totalBytesSent The total bytes sent
///
/// \param totalBytesExpectedToSend The total bytes expected to send
///
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didSendBodyData:(int64_t)bytesSent totalBytesSent:(int64_t)totalBytesSent totalBytesExpectedToSend:(int64_t)totalBytesExpectedToSend;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSString;

SWIFT_CLASS("_TtC11VeracitySDK8BatchJob")
@interface BatchJob : RealmSwiftObject
@property (nonatomic, copy) NSString * _Null_unspecified identifier;
@property (nonatomic) BOOL completed;
+ (NSString * _Nonnull)primaryKey SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)shouldIncludeInDefaultSchema SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSCoder;

SWIFT_CLASS("_TtC11VeracitySDK19CameraStreamPreview")
@interface CameraStreamPreview : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end

@class AVCapturePhotoOutput;
@class AVCapturePhoto;

@interface CameraStreamPreview (SWIFT_EXTENSION(VeracitySDK)) <AVCapturePhotoCaptureDelegate>
- (void)captureOutput:(AVCapturePhotoOutput * _Nonnull)output didFinishProcessingPhoto:(AVCapturePhoto * _Nonnull)photo error:(NSError * _Nullable)error;
@end



SWIFT_CLASS("_TtC11VeracitySDK7Creator")
@interface Creator : RealmSwiftObject
@property (nonatomic, copy) NSString * _Nonnull identifier;
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, copy) NSString * _Nullable lastName;
+ (NSString * _Nonnull)primaryKey SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)shouldIncludeInDefaultSchema SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// Main component to handle crop feature.
/// Must be in aspect ration 4:3.
SWIFT_CLASS("_TtC11VeracitySDK8CropView")
@interface CropView : UIView
- (void)awakeFromNib;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIGestureRecognizer;
@class UITouch;

@interface CropView (SWIFT_EXTENSION(VeracitySDK)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch SWIFT_WARN_UNUSED_RESULT;
@end


/// Singelton. Hold device info, updates device info on API, handles updates of notification token and even flashlight for camera stream preview.
SWIFT_CLASS("_TtC11VeracitySDK13DeviceManager")
@interface DeviceManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




@class LocalProtectItem;
@class ProtectItem;
@class LocalJob;
@class Job;

SWIFT_PROTOCOL("_TtP11VeracitySDK21EventListenerDelegate_")
@protocol EventListenerDelegate
@optional
- (void)onProtectUploadingFinishedWithProtectItem:(LocalProtectItem * _Nonnull)protectItem;
- (void)onProtectUploadingStartedWithProtectItem:(LocalProtectItem * _Nonnull)protectItem;
- (void)onProtectUploadingProgressWithProgress:(NSInteger)progress protectItem:(LocalProtectItem * _Nonnull)protectItem;
- (void)onProtectAnalyzingFinishedWithProtectItems:(NSArray<ProtectItem *> * _Nonnull)protectItems;
- (void)onVerifyUploadingStartedWithJobItem:(LocalJob * _Nonnull)jobItem;
- (void)onVerifyUploadingProgressWithProgress:(NSInteger)progress jobItem:(LocalJob * _Nonnull)jobItem;
- (void)onVerifyUploadingFinishedWithJobItem:(LocalJob * _Nonnull)jobItem;
- (void)onVerifyAnalyzingFinishedWithJobItems:(NSArray<Job *> * _Nonnull)jobItems;
@end


SWIFT_CLASS("_TtC11VeracitySDK15FileUploadTrack")
@interface FileUploadTrack : RealmSwiftObject
+ (NSString * _Nonnull)primaryKey SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class FingerprintLocation;

SWIFT_CLASS("_TtC11VeracitySDK11Fingerprint")
@interface Fingerprint : RealmSwiftObject
@property (nonatomic, copy) NSString * _Null_unspecified identifier;
@property (nonatomic, copy) NSString * _Null_unspecified name;
@property (nonatomic, copy) NSString * _Null_unspecified image1Url;
@property (nonatomic, copy) NSString * _Null_unspecified image2Url;
@property (nonatomic, copy) NSString * _Nullable fingerprintHash;
@property (nonatomic, strong) FingerprintLocation * _Nullable location;
+ (NSString * _Nonnull)primaryKey SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)shouldIncludeInDefaultSchema SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11VeracitySDK19FingerprintLocation")
@interface FingerprintLocation : RealmSwiftObject
@property (nonatomic) NSInteger x;
@property (nonatomic) NSInteger y;
@property (nonatomic) NSInteger width;
@property (nonatomic) NSInteger height;
+ (BOOL)shouldIncludeInDefaultSchema SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Base operation parent class with all the boilerplate code in. Subclassers need only override <code>main</code> but they are required to call <code>executing</code> before and after executing & <code>finished</code> after operation finish.
SWIFT_CLASS("_TtC11VeracitySDK11VPOperation")
@interface VPOperation : NSOperation
@property (nonatomic, readonly, getter=isExecuting) BOOL executing;
@property (nonatomic, readonly, getter=isFinished) BOOL finished;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11VeracitySDK22ImageDownloadOperation")
@interface ImageDownloadOperation : VPOperation
- (void)main;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class TradingCode;

SWIFT_CLASS("_TtC11VeracitySDK3Job")
@interface Job : RealmSwiftObject
@property (nonatomic, copy) NSString * _Null_unspecified identifier;
@property (nonatomic, copy) NSString * _Nullable userID;
@property (nonatomic, copy) NSString * _Nullable jobName;
@property (nonatomic, copy) NSString * _Nullable artworkID;
@property (nonatomic, strong) ProtectItem * _Nullable artwork;
@property (nonatomic, copy) NSString * _Nullable searchQueryImageUrl;
@property (nonatomic, copy) NSString * _Nullable searchQueryImageUrlThumbnail;
@property (nonatomic, copy) NSString * _Nullable error;
@property (nonatomic) BOOL completed;
@property (nonatomic, strong) TradingCode * _Nullable tradingCode;
+ (NSString * _Nonnull)primaryKey SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)ignoredProperties SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)shouldIncludeInDefaultSchema SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// Class that replaces notifications. It can monitore finished upload tasks and wait for analyzing result.
SWIFT_CLASS("_TtC11VeracitySDK16JobResultChecker")
@interface JobResultChecker : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// Simple custom operation that updates local <code>Job</code> data with remote data.
SWIFT_CLASS("_TtC11VeracitySDK19JobsReloadOperation")
@interface JobsReloadOperation : VPOperation
- (void)main;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class PublicProtectItem;
@class VerificationProtectItem;

/// Represents local variation of server <code>Job</code> represented by <code>type</code>.
SWIFT_CLASS("_TtC11VeracitySDK8LocalJob")
@interface LocalJob : RealmSwiftObject
@property (nonatomic, copy) NSString * _Nonnull identifier;
/// Refenrece to existing job on server. Used to remove after upload complete
@property (nonatomic, copy) NSString * _Nullable jobID;
@property (nonatomic, copy) NSString * _Nullable overviewImageFilename;
@property (nonatomic, copy) NSString * _Nullable thumbnailImageFilename;
@property (nonatomic, copy) NSString * _Nullable overviewImageUrl;
@property (nonatomic, copy) NSString * _Nullable thumbnailImageUrl;
@property (nonatomic, strong) PublicProtectItem * _Nullable publicArtwork;
@property (nonatomic, strong) VerificationProtectItem * _Nullable verificationArtwork;
@property (nonatomic, strong) ProtectItem * _Nullable artwork;
@property (nonatomic) NSInteger fingerprintImageFilenamesCount;
@property (nonatomic, copy) NSString * _Nullable algo;
@property (nonatomic, readonly, copy) NSString * _Nullable expectedResult;
/// fingerprint is loaded before verification flow, or later when uploading.
@property (nonatomic, strong) Fingerprint * _Nullable fingerprint;
@property (nonatomic, copy) NSString * _Nullable batchJobID;
+ (NSString * _Nonnull)primaryKey SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)shouldIncludeInDefaultSchema SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class NSDate;

/// Local artwork is created after meta data validation
/// Designed to hold all user generated data when going thru protect flow
SWIFT_CLASS("_TtC11VeracitySDK16LocalProtectItem")
@interface LocalProtectItem : RealmSwiftObject
@property (nonatomic, copy) NSString * _Nonnull identifier;
/// To finish incomplete / failed protect flow
@property (nonatomic, strong) ProtectItem * _Nullable artwork;
@property (nonatomic, strong) Creator * _Nullable artist;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable overviewImageFilename;
@property (nonatomic, copy) NSString * _Nullable thumbnailImageFilename;
@property (nonatomic, copy) NSDate * _Nonnull createdAt;
@property (nonatomic) NSInteger fingerprintImageFilenamesCount;
@property (nonatomic, strong) FingerprintLocation * _Nullable fingerprintLocation;
/// Metadata JSON string backup.
@property (nonatomic, copy) NSString * _Nullable metadataString;
@property (nonatomic, copy) NSString * _Nullable overlayGuideImageFilename;
@property (nonatomic, copy) NSString * _Nullable algo;
@property (nonatomic, copy) NSString * _Nullable thumbnailImageUrl;
@property (nonatomic, copy) NSString * _Nullable overviewImageUrl;
@property (nonatomic, copy) NSString * _Nullable createdArtworkID;
@property (nonatomic, copy) NSString * _Nullable jobID;
+ (BOOL)shouldIncludeInDefaultSchema SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)primaryKey SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




/// Main component to handle network requests.
/// Minor logic for persist some response data in realm.
/// Process network data as <code>JSON</code> then returned by async completion block (optional in most cases because of realm notification).
SWIFT_CLASS("_TtC11VeracitySDK13NetworkClient")
@interface NetworkClient : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// Singelton. Main class to handle all notification related stuff.
SWIFT_CLASS("_TtC11VeracitySDK19NotificationManager")
@interface NotificationManager : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC11VeracitySDK11ProtectItem")
@interface ProtectItem : RealmSwiftObject
@property (nonatomic, copy) NSString * _Nonnull identifier;
@property (nonatomic, copy) NSString * _Null_unspecified name;
@property (nonatomic, copy) NSString * _Null_unspecified artistID;
@property (nonatomic, copy) NSString * _Nullable artistFirstName;
@property (nonatomic, copy) NSString * _Nullable artistLastName;
@property (nonatomic, copy) NSString * _Nullable overview;
@property (nonatomic, copy) NSString * _Nullable thumbnail;
@property (nonatomic) double width;
@property (nonatomic) double height;
@property (nonatomic) BOOL authorized;
@property (nonatomic) NSInteger year;
@property (nonatomic, copy) NSString * _Nullable createdByID;
@property (nonatomic, copy) NSString * _Nullable publicID;
@property (nonatomic, copy) NSString * _Nullable errorMessage;
@property (nonatomic, strong) TradingCode * _Nullable firstTradingCode;
@property (nonatomic, copy) NSString * _Nullable algorithmUsed;
@property (nonatomic, copy) NSString * _Nullable webhookUrl;
@property (nonatomic, copy) NSString * _Nullable transferRequest;
@property (nonatomic, copy) NSString * _Nullable transferedFrom;
@property (nonatomic, copy) NSString * _Nullable transferedTo;
@property (nonatomic, copy) NSString * _Nullable transferID;
+ (NSString * _Nonnull)primaryKey SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)ignoredProperties SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)shouldIncludeInDefaultSchema SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// Simple custom operation that updates local <code>Artwork</code> data with remote data.
SWIFT_CLASS("_TtC11VeracitySDK27ProtectItemsReloadOperation")
@interface ProtectItemsReloadOperation : VPOperation
- (void)main;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Simple subclass with no diference agains parent class, to separate Public items.
SWIFT_CLASS("_TtC11VeracitySDK17PublicProtectItem")
@interface PublicProtectItem : ProtectItem
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Singelton. Main class to cover Realm database handling like get Objects of type, get Object by primary key, add Object to database, update parameters of Object, remove from database.
/// By default <code>RealmHandler</code> can only work with SDK’s predefined Object subclass types.
/// <ul>
///   <li>
///     Class <code>Object</code> is part of <code>Realm</code>.
///   </li>
/// </ul>
SWIFT_CLASS("_TtC11VeracitySDK12RealmHandler")
@interface RealmHandler : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// Simple class to hold ID references to objects with unseen result.
SWIFT_CLASS("_TtC11VeracitySDK20ResultIndicatorValue")
@interface ResultIndicatorValue : RealmSwiftObject
@property (nonatomic, copy) NSDate * _Nonnull lastSeen;
+ (BOOL)shouldIncludeInDefaultSchema SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)primaryKey SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11VeracitySDK13SearchHistory")
@interface SearchHistory : RealmSwiftObject
@property (nonatomic, copy) NSString * _Null_unspecified identifier;
+ (NSString * _Nonnull)primaryKey SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSBundle;

SWIFT_CLASS("_TtC11VeracitySDK24TestSampleViewController")
@interface TestSampleViewController : UIViewController
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end





@interface TestSampleViewController (SWIFT_EXTENSION(VeracitySDK)) <EventListenerDelegate>
- (void)onProtectUploadingFinishedWithProtectItem:(LocalProtectItem * _Nonnull)protectItem;
- (void)onProtectUploadingStartedWithProtectItem:(LocalProtectItem * _Nonnull)protectItem;
- (void)onProtectAnalyzingFinishedWithProtectItems:(NSArray<ProtectItem *> * _Nonnull)protectItems;
- (void)onProtectUploadingProgressWithProgress:(NSInteger)progress protectItem:(LocalProtectItem * _Nonnull)protectItem;
- (void)onVerifyUploadingStartedWithJobItem:(LocalJob * _Nonnull)jobItem;
- (void)onVerifyUploadingFinishedWithJobItem:(LocalJob * _Nonnull)jobItem;
- (void)onVerifyAnalyzingFinishedWithJobItems:(NSArray<Job *> * _Nonnull)jobItems;
- (void)onVerifyUploadingProgressWithProgress:(NSInteger)progress jobItem:(LocalJob * _Nonnull)jobItem;
@end


SWIFT_CLASS("_TtC11VeracitySDK11TradingCode")
@interface TradingCode : RealmSwiftObject
@property (nonatomic, copy) NSString * _Null_unspecified code;
@property (nonatomic, copy) NSDate * _Null_unspecified expiration;
+ (BOOL)shouldIncludeInDefaultSchema SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@interface UIButton (SWIFT_EXTENSION(VeracitySDK))
@property (nonatomic, copy) IBInspectable NSString * _Nullable xibLocKey;
@end






/// Singelton. Mostly internal class that automaticaly handles all the uploading process and can report upload progress. Each <code>LocalJob</code> or <code>LocalProtectItem</code> change in database is observed and when any item (protect item have biggest upload priority) report itself as upload-ready, then uploading starts.
/// Uploading of any item is made of several parts - mostly combination of direct image upload and some regular requests. <code>UploadManager</code> will handle automaticaly any upload part fail and try to make request again later in right order, skipping the completed ones.
/// Upload runs on background thread that can run in background for unspecified amount of time.
/// There can be only one item at all to be uploaded at once.
SWIFT_CLASS("_TtC11VeracitySDK13UploadManager")
@interface UploadManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC11VeracitySDK4User")
@interface User : RealmSwiftObject
@property (nonatomic, copy) NSString * _Nonnull email;
@property (nonatomic) BOOL invoiceBilling;
@property (nonatomic) BOOL arGuidingON;
@property (nonatomic) BOOL shareAnalyticON;
@property (nonatomic) BOOL flashlightOn;
@property (nonatomic) BOOL metricalUnits;
+ (NSString * _Nonnull)primaryKey SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// Handle logged user
SWIFT_CLASS("_TtC11VeracitySDK11UserManager")
@interface UserManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// Simple subclass with no diference agains parent class, to separate items that’re part of Verification process with items that’re owned by logged user.
SWIFT_CLASS("_TtC11VeracitySDK23VerificationProtectItem")
@interface VerificationProtectItem : ProtectItem
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11VeracitySDK6Wallet")
@interface Wallet : RealmSwiftObject
+ (NSString * _Nonnull)primaryKey SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
