// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.4 (swiftlang-1205.0.26.9 clang-1205.0.19.55)
// swift-module-flags: -target x86_64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name CaptureScheduler
@_exported import CaptureScheduler
import Foundation
import Swift
public protocol CaptureSchedulerDelegate : AnyObject {
  func captureScheduler(_ scheduler: CaptureScheduler.CaptureScheduler, didInitiateCaptureWithProgress progress: Foundation.Progress)
}
@objc public class CaptureScheduler : ObjectiveC.NSObject {
  public var requiredCaptures: Swift.Int {
    get
  }
  public var timeInterval: Foundation.TimeInterval {
    get
  }
  final public let minimalPositiveConditionFraction: Swift.Double
  weak public var delegate: CaptureScheduler.CaptureSchedulerDelegate?
  public var progress: Foundation.Progress {
    get
  }
  public var isCompleted: Swift.Bool {
    get
  }
  public var isInvalidated: Swift.Bool {
    get
  }
  @objc public init(requiredCaptures: Swift.Int, timeInterval: Foundation.TimeInterval = 0.75, minimalPositiveConditionFraction: Swift.Double = 0.8)
  @objc public func reset()
  @objc public func invalidate()
  public func start()
  @objc public func condition(_ condition: Swift.Bool)
  @objc override dynamic public init()
  @objc deinit
}
