// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.4 (swiftlang-1205.0.26.9 clang-1205.0.19.55)
// swift-module-flags: -target arm64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name MAPView
import AVFoundation
import CameraCapture
import ImageIO
@_exported import MAPView
import Swift
import UIKit
import os.log
import os
public typealias FingerprintPreprocessingOperation = (UIKit.UIImage) -> UIKit.UIImage
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class MAPView : UIKit.UIView {
  public var minCameraPreviewAlpha: CoreGraphics.CGFloat
  public var maxCameraPreviewAlpha: CoreGraphics.CGFloat
  weak public var delegate: CameraCapture.CameraCaptureDelegate? {
    get
    set
  }
  public var isRunning: Swift.Bool {
    get
  }
  public func changeZoom(value: CoreGraphics.CGFloat)
  public func locateFingerprint(overviewImage: UIKit.UIImage, fingerprintRect: CoreGraphics.CGRect, completion: (() -> Swift.Void)? = nil)
  public func captureFingerprintPhoto()
  public func start()
  public func stop()
  @objc deinit
}
extension MAPView {
  public var hasTorch: Swift.Bool {
    get
  }
  public var isTorchActive: Swift.Bool {
    get
  }
  public var torchMode: AVFoundation.AVCaptureDevice.TorchMode {
    get
    set
  }
  public var torchLevel: Swift.Float {
    get
  }
  public func setTorchModeOn(level: Swift.Float)
  public func toggleTorch(level: Swift.Float = AVCaptureDevice.maxAvailableTorchLevel) -> Swift.Bool
}
